{"version":3,"file":"static/js/422.60e5a10b.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n    margin-bottom: 35px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n    background-color: #EDF2F7;\n    border: 2px solid black;\n    flex-direction: column;\n    row-gap: 10px;\n    align-items: center;\n    padding: 30px 20px;\n    border-radius: 5px;\n    \n    max-width: 350px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    row-gap: 3px;\n    color: black;\n    min-width: 300px;\n    min-height: 30px;\n`;\n\nexport const Input = styled(Field)`\n    min-height: 300px;\n    min-height: 30px;\n    padding: 2px 6px;\n    font-size: 16px;\n    outline: none;\n    border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n    padding: 5px 10px;\n    font-family: inherit;\n    font-size: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    column-gap: 5px;\n\n    min-width: 140px;\n    min-height: 30px;\n    margin-top: 20px;\n\n    background-color: #319795;\n    border: 2px solid #319795;\n    border-radius: 5px;\n    cursor: pointer;\n\n    transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    border-color color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n    \n    \n    &:hover{\n    color: white;\n    background-color: #2C7A7B;\n    border-color: #2C7A7B;\n    }\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n    font-size: 14px;\n    cursor: black;\n    max-width: 300px;\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectIsLoading, selectVisibleContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  Button,\n  Input,\n  Label,\n  StyledForm,\n  StyledError,\n} from './ContactForm.styled';\nimport { Loader } from 'components/Loader';\n\nconst defaultValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  number: Yup.string()\n    .required('Phone numder is required')\n    .matches(\n      /^[\\d()+-]+$/,\n      'Phone number must contain only 0-9 and these symbols: ( ) - +'\n    )\n    .min(8, 'Phone number must be at least 8 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const [determineAddBtn, setDetermineAddBtn] = useState(false);\n\n  const handleSubmitForm = (values, action) => {\n    setDetermineAddBtn(true);\n    const isInContacts = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      return toast.warn(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values)).then(() => {\n      setDetermineAddBtn(false);\n    });\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={handleSubmitForm}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <StyledError name=\"number\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\" disabled={isLoading && determineAddBtn}>\n          {isLoading && determineAddBtn && <Loader />}\n          Add Contact\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    row-gap: 10px;\n    \n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    align-items: center;\n    column-gap: 10px;\n    color: black;\n`;\n\nexport const Button = styled.button`\n    min-width: 90px;\n    padding: 6px 12px;\n    \n    font-family: inherit;\n    font-size: 16px;\n\n    margin: 0;\n    margin-left: 80px;\n\n\n    background-color: #319795;\n    border: 2px solid #319795;\n    border-radius: 4px;\n    cursor: pointer;\n\n    transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    border-color color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n    \n    \n    &:hover{\n    color: white;\n    background-color: #2C7A7B;\n    border-color: #2C7A7B;\n    }\n`;\n\nexport const NoContacts = styled.p`\n    color: black;\n`;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { List, ListItem, Button, NoContacts } from './ContactList.styled';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [contactToDeleteId, setContactToDeleteId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!visibleContacts?.length && !error & !isLoading) {\n    return <NoContacts>No contacts added yet.</NoContacts>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }, idx) => (\n        <ListItem key={id}>\n          <div>{idx + 1}.</div>\n          {name}: {number}\n          <Button\n            onClick={() => {\n              setContactToDeleteId(id);\n              dispatch(deleteContact(id)).then(() => {\n                setContactToDeleteId(null);\n              });\n            }}\n            disabled={isLoading && contactToDeleteId === id}\n          >\n            {contactToDeleteId === id && <Loader />}\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    min-width: 300px;\n    min-height: 30px;\n    \n    margin-bottom: 15px;\n    padding: 2px 6px;\n    \n    font-size: 15px;\n    outline: none;\n    border-radius: 5px;\n\n`;","import { Input } from './Filter.styled';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Input\n      type=\"text\"\n      value={filter}\n      onChange={e => dispatch(setFilter(e.target.value.trim()))}\n    />\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const ContactsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    row-gap: 10px;\n    align-items: center;\n    padding: 20px;\n    border: 2px black solid;\n    border-radius: 5px;\n    min-width: 350px;\n`;\n\nexport const ContactsTitle = styled.p`\n    margin-bottom: 10px;\n    font-size: 24px;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n`;\n\nexport const FilterTitle = styled.p`\n    margin-bottom: 3px;\n    font-size: 18px;\n    text-align: center;\n    color: white;\n\n`;\n\nexport const MainTitle = styled.h1`\n    margin-bottom: 20px;\n    font-size: 32px;\n    text-align: center;\n    color: white;\n    \n`;\n\nexport const MainContainer = styled.div`\n    display: flex;\n    align-items: center;\n    weight: 600px;\n    flex-direction: column;\n    margin: 0 auto;\n`;\n\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter';\nimport {\n  ContactsContainer,\n  ContactsTitle,\n  FilterTitle,\n  MainTitle,\n  MainContainer,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n\n      <MainContainer>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <ContactsContainer>\n          <FilterTitle>Find contacts by name</FilterTitle>\n          <Filter />\n          <ContactList />\n        </ContactsContainer>\n      </MainContainer>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","contact","name","toLowerCase","includes","StyledForm","styled","Form","Label","Input","Field","Button","StyledError","ErrorMessage","defaultValues","number","schema","Yup","shape","required","matches","min","ContactForm","dispatch","useDispatch","useSelector","useState","determineAddBtn","setDetermineAddBtn","initialValues","onSubmit","values","action","some","toast","addContact","then","resetForm","validationSchema","type","component","disabled","Loader","List","ListItem","NoContacts","ContactList","visibleContacts","contactToDeleteId","setContactToDeleteId","useEffect","fetchContacts","length","map","idx","id","onClick","deleteContact","Filter","value","onChange","e","setFilter","target","trim","ContactsContainer","ContactsTitle","FilterTitle","MainTitle","MainContainer","Contacts","Helmet"],"sourceRoot":""}